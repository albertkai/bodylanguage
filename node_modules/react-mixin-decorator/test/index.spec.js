import expect from 'expect';
import React, { PropTypes } from 'react';
import { renderTest } from 'react-redux-provide-test-utils';
import Test, { SomeDecorator } from './components/Test';
import SomeMixin from './mixins/some-mixin';

const test = renderTest(Test);

describe('react-mixin-decorator', () => {
  it('should render correctly', () => {
    expect(test.node.tagName).toBe('DIV');
    expect(test.node.className).toBe('test');
    expect(test.node.childNodes[0].tagName).toBe('DIV');
    expect(test.node.childNodes[0].textContent).toBe('hello');
    expect(test.node.childNodes[1].tagName).toBe('DIV');
    expect(test.node.childNodes[1].textContent).toBe('Called 0 times.');
  });

  it('should render correctly after click', () => {
    test.node.click();
    expect(test.node.tagName).toBe('DIV');
    expect(test.node.className).toBe('test');
    expect(test.node.childNodes[0].tagName).toBe('DIV');
    expect(test.node.childNodes[0].textContent).toBe('bro');
    expect(test.node.childNodes[1].tagName).toBe('DIV');
    expect(test.node.childNodes[1].textContent).toBe('Called 1 times.');
  });

  it('should assign the mixin to the HOC', () => {
    expect(SomeDecorator.mixin).toBe(SomeMixin);
  });
});
